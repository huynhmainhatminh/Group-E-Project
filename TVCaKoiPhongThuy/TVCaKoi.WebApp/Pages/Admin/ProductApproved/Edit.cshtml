@page
@model TVCaKoi.WebApp.Pages.Admin.Product.EditModel
@{
    ViewData["Title"] = "Chỉnh sửa sản phẩm (đã duyệt)";
}


<style>
    .product-image {
        max-width: 200px;
        margin-right: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .product-image img {
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product-details {
        flex-grow: 1;
    }

    .fengshui-btn.selected {
        background-color: red;
        color: white;
        border: 2px solid yellow; /* Viền màu vàng */
    }

    .color-btn.selected {
        background-color: red;
        color: white;
        border: 2px solid yellow; /* Viền màu vàng */
    }

    .custom-file-upload {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .upload-label {
        cursor: pointer;
        padding: 8px 12px;
        border: 1px solid white;
        border-radius: 5px;
        color: #007bff;
        transition: background-color 0.3s, color 0.3s;
    }

    .upload-label:hover {
        background-color: #007bff;
        color: white;
    }

    .file-name {
        font-size: 0.9rem;
        font-style: italic;
        color: #aaa; /* Màu xám rất nhạt */
    }

    .color, .fengshui {
        display: flex;
        flex-wrap: wrap; /* Cho phép các nút xuống hàng khi không đủ chỗ */
        gap: 10px; /* Khoảng cách giữa các nút */
    }

    .color-btn, .fengshui-btn {
        padding: 8px 12px;
        font-size: 14px;
        border: 1px solid #007bff;
        border-radius: 5px;
        cursor: pointer;
        background-color: green;
        color: white;
        transition: background-color 0.3s, color 0.3s, transform 0.2s;
    }

    .color-btn:hover, .fengshui-btn:hover {
        background-color: #007bff;
        color: #fff;
        transform: scale(1.05); /* Phóng to nhẹ khi hover */
    }

    .color-btn.selected, .fengshui-btn.selected {
        background-color: red;
        color: white;
        border: 2px solid yellow;
    }

</style>

<div class="container mt-5 custom-shadow text-white bg-dark">
    <div class="card-header">
        <h2 class="mb-0">@ViewData["Title"]</h2>
    </div>
    <div class="card-body">
        <form method="post" enctype="multipart/form-data">
            <div class="d-flex">
                <!-- Phần bên trái: Hiển thị hình ảnh sản phẩm -->
                <div class="product-image me-4">
                    <label asp-for="productss.ImgProduct" class="form-label fw-bold">Hình Ảnh Sản Phẩm</label>

                    <!-- Khu vực hiển thị ảnh hiện tại -->
                    <div class="image-preview mb-3">
                        <img id="currentImage" src="@Url.Content(Model.productss.ImgProduct ?? "~/KOI/asagi.jpg")"
                             alt="Product Image" style="width: 200px; height: auto; border-radius: 5px;">
                    </div>

                    <!-- Khu vực tải ảnh lên -->
                    <div class="custom-file-upload">
                        <input type="file" id="image" name="Image" accept="image/*" style="display: none;" />
                        <label for="image" class="upload-label">
                            <i class="fas fa-upload"></i> Chọn ảnh
                        </label>
                    </div>

                    <!-- Dòng chữ hiển thị tên tệp đã chọn -->
                    <div class="file-name-container mt-1">
                        <span class="file-name">Chưa có ảnh nào được chọn</span>
                    </div>

                    <!-- Hiển thị lỗi nếu có -->
                    <span asp-validation-for="Image" class="text-danger"></span>
                </div>

                <!-- Phần bên phải: Hiển thị thông tin sản phẩm -->
                <div class="product-details flex-grow-1">
                    <input type="hidden" name="itemid" value="@Model.productss.Idproduct" />

                    <div class="mb-3">
                        <label asp-for="productss.Idproduct" class="form-label fw-bold">Sản Phẩm ID:</label>
                        <input asp-for="productss.Idproduct" class="form-control" readonly />
                    </div>
                    <div class="mb-4">
                        <label asp-for="productss.NameProduct" class="form-label fw-bold">Tên Sản Phẩm:</label>
                        <input asp-for="productss.NameProduct" class="form-control custom-input" placeholder="Nhập tên sản phẩm" />
                        <span asp-validation-for="productss.NameProduct" class="text-danger"></span>
                    </div>
                    <div class="mb-4">
                        <label asp-for="productss.Username" class="form-label fw-bold">Tên Người Dùng:</label>
                        <input asp-for="productss.Username" class="form-control custom-input" placeholder="Nhập tên người dùng" />
                        <span asp-validation-for="productss.Username" class="text-danger"></span>
                    </div>
                    <div class="mb-4">
                        <label asp-for="productss.ColorProduct" class="form-label fw-bold">Màu Sắc:</label>
                        <div class="color">
                            <button type="button" class="color-btn" id="Đỏ" onclick="selectColor(this)">Đỏ</button>
                            <button type="button" class="color-btn" id="Vàng" onclick="selectColor(this)">Vàng</button>
                            <button type="button" class="color-btn" id="Trắng" onclick="selectColor(this)">Trắng</button>
                            <button type="button" class="color-btn" id="Cam" onclick="selectColor(this)">Cam</button>
                            <button type="button" class="color-btn" id="Hồng" onclick="selectColor(this)">Hồng</button>
                            <button type="button" class="color-btn" id="Bạc" onclick="selectColor(this)">Bạc</button>
                            <button type="button" class="color-btn" id="Đen" onclick="selectColor(this)">Đen</button>
                            <button type="button" class="color-btn" id="Nâu" onclick="selectColor(this)">Nâu</button>
                            <button type="button" class="color-btn" id="Xanh Dương" onclick="selectColor(this)">Xanh Dương</button>
                            <button type="button" class="color-btn" id="Xanh Lá Cây" onclick="selectColor(this)">Xanh Lá Cây</button>
                            <button type="button" class="color-btn" id="none-color" onclick="selectColor(this)">Không Có</button>
                        </div>
                        <input type="hidden" asp-for="productss.ColorProduct" id="colorProduct" data-colors="@Model.productss.ColorProduct" />
                        <span asp-validation-for="productss.ColorProduct" class="text-danger"></span>
                    </div>
                    <div class="mb-4">
                        <label asp-for="productss.DestinyProduct" class="form-label fw-bold">Mệnh Phong Thủy:</label>
                        <div class="fengshui" style="margin-bottom: 10px;">
                            <button type="button" class="fengshui-btn" id="Kim" onclick="selectDestiny(this)">Kim</button>
                            <button type="button" class="fengshui-btn" id="Thủy" onclick="selectDestiny(this)">Thủy</button>
                            <button type="button" class="fengshui-btn" id="Hỏa" onclick="selectDestiny(this)">Hỏa</button>
                            <button type="button" class="fengshui-btn" id="Mộc" onclick="selectDestiny(this)">Mộc</button>
                            <button type="button" class="fengshui-btn" id="Thổ" onclick="selectDestiny(this)">Thổ</button>
                            <button type="button" class="fengshui-btn" id="none-fengshui" onclick="selectDestiny(this)">Không Có</button>
                        </div>
                        <input type="hidden" asp-for="productss.DestinyProduct" id="destinyProduct" data-destinies="@Model.productss.DestinyProduct" />
                        <span asp-validation-for="productss.DestinyProduct" class="text-danger"></span>
                    </div>
                    <div class="mb-4 custom-select-container">
                        <label asp-for="productss.IdproductType" class="form-label fw-bold me-3">Loại Sản Phẩm:</label>
                        <select asp-for="productss.IdproductType" style="padding: 4px; border: 1px solid #ccc; border-radius: 5px; background-color: #f9f9f9; font-size: 15px; color: #333; cursor: pointer; appearance: auto; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); transition: border-color 0.3s ease, box-shadow 0.3s ease; position: relative; top: -4px; margin-right: 10px;">
                            <option value="0">Chọn</option>
                            <option value="1">Hồ cá</option>
                            <option value="2">Cá koi</option>
                            <option value="3">Sản phẩm chăm sóc cá</option>
                            <option value="4">Sản phẩm trang trí</option>
                            <option value="5">Thiết bị</option>
                            <option value="6">Phụ kiện</option>
                        </select>
                        <span asp-validation-for="productss.IdproductType" class="text-danger"></span>
                    </div>
                    <div class="mb-4">
                        <label asp-for="productss.Description" class="form-label fw-bold">Nội Dung Sản Phẩm:</label>
                        <textarea asp-for="productss.Description" class="form-control custom-input" placeholder="Nhập nội dung sản phẩm" required></textarea>
                        <span asp-validation-for="productss.Description" class="text-danger"></span>
                    </div>

                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <input type="submit" value="Cập nhật sản phẩm" class="btn btn-warning px-4 custom-btn" />
                <a class="btn btn-secondary px-4 custom-btn" asp-page="Index">Quay trở lại</a>
            </div>
        </form>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Lấy giá trị các màu sắc đã chọn từ thuộc tính data-colors
        const colorProductElement = document.getElementById("colorProduct");
        const selectedColors = colorProductElement ? colorProductElement.dataset.colors : "";

        // Kiểm tra nếu giá trị là "Không Có"
        if (selectedColors === "Không Có" || !selectedColors) {
            // Nếu không có màu nào được chọn hoặc giá trị là "Không Có", tự động chọn nút "Không Có"
            const noneColorButton = document.getElementById("none-color");
            if (noneColorButton) {
                noneColorButton.classList.add("selected");
                colorProductElement.value = "Không Có";
            }
        } else {
            // Nếu có các màu đã chọn, tách chuỗi thành mảng và áp dụng lớp "selected"
            const colorsArray = selectedColors.split(", ").map(color => color.trim());
            colorsArray.forEach(color => {
                const colorButton = document.getElementById(color);
                if (colorButton) {
                    colorButton.classList.add("selected");
                }
            });
            colorProductElement.value = colorsArray.join(", ");
        }

        // Lấy giá trị các mệnh phong thủy đã chọn từ thuộc tính data-destinies
        const destinyProductElement = document.getElementById("destinyProduct");
        const selectedDestinies = destinyProductElement ? destinyProductElement.dataset.destinies : "";

        // Kiểm tra nếu giá trị là "Không Có" hoặc là chuỗi rỗng
        if (selectedDestinies === "Không Có" || !selectedDestinies) {
            // Nếu không có mệnh phong thủy nào được chọn hoặc giá trị là "Không Có", tự động chọn nút "Không Có"
            const noneDestinyButton = document.getElementById("none-fengshui");
            if (noneDestinyButton) {
                noneDestinyButton.classList.add("selected");
                destinyProductElement.value = "Không Có";
            }
        } else {
            // Nếu có các mệnh phong thủy đã chọn, tách chuỗi thành mảng và áp dụng lớp "selected"
            const destiniesArray = selectedDestinies.split(", ").map(destiny => destiny.trim());
            destiniesArray.forEach(destiny => {
                const destinyButton = document.getElementById(destiny);
                if (destinyButton) {
                    destinyButton.classList.add("selected");
                }
            });
            destinyProductElement.value = destiniesArray.join(", ");
        }
    });




    function selectDestiny(button) {
        if (button.id === "none-fengshui") {
            document.querySelectorAll('.fengshui-btn').forEach(btn => btn.classList.remove('selected'));
        } else {
            document.getElementById("none-fengshui").classList.remove('selected');
        }
        button.classList.toggle('selected');
        document.getElementById("destinyProduct").value = Array.from(document.querySelectorAll('.fengshui-btn.selected'))
            .map(btn => btn.innerText).join(", ");
    }

    function selectColor(button) {
        const selectedButtons = document.querySelectorAll('.color-btn.selected');
        if (button.id === "none-color") {
            document.querySelectorAll('.color-btn').forEach(btn => btn.classList.remove('selected'));
            button.classList.add('selected');
        } else {
            if (selectedButtons.length >= 3 && !button.classList.contains('selected')) {
                swal("Cảnh báo!", "Nhập tối đa 3 màu!", "warning");
                return;
            }
            document.getElementById("none-color").classList.remove('selected');
            button.classList.toggle('selected');
        }
        updateSelectedColors();
    }

    function updateSelectedColors() {
        document.getElementById("colorProduct").value = Array.from(document.querySelectorAll('.color-btn.selected'))
            .map(btn => btn.innerText).join(", ");
    }

    document.getElementById("image").addEventListener("change", function () {
        const fileName = this.files[0] ? this.files[0].name : "Chưa có ảnh nào được chọn";
        document.querySelector(".file-name").textContent = fileName;
    });
</script>



<script>
    document.getElementById("image").addEventListener("change", function () {
        const fileInput = this;
        const fileName = fileInput.files[0] ? fileInput.files[0].name : "Chưa có ảnh nào được chọn";
        document.querySelector(".file-name").textContent = fileName;

        // Kiểm tra nếu có tệp được chọn
        if (fileInput.files && fileInput.files[0]) {
            const reader = new FileReader();

            // Đọc tệp và thay đổi ảnh hiện tại khi tải xong
            reader.onload = function (e) {
                document.getElementById("currentImage").src = e.target.result;
            };

            // Bắt đầu đọc tệp dưới dạng Data URL
            reader.readAsDataURL(fileInput.files[0]);
        }
    });
    document.getElementById("image").addEventListener("change", function () {
        const fileName = this.files[0] ? this.files[0].name : "Chưa có ảnh nào được chọn";
        document.querySelector(".file-name").textContent = fileName;
    });
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}